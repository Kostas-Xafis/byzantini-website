---
const links = [
	{ name: "Αρχική", url: "/" },
	{ name: "Η Σχολή μας", url: "/sxoli" },
	{ name: "Εγγραφές", url: "/eggrafes" },
	{ name: "Καθηγητές", url: "/kathigites" },
	{ name: "Σπουδαστήρια", url: "/spoudastiria" }
];

const highlight = (url: string) => {
	const urlWithEndingSlash = url.slice() + "/";
	const path = Astro.url.pathname;
	return path === url || path === urlWithEndingSlash;
};

const isDev = Astro.url.hostname.includes("localhost") || Astro.url.hostname.includes("127.0.0.1");
const isMainPage = Astro.url.pathname === "/";
---

<>
	<nav
		class={"fixed top-0 left-0 w-full md:h-[4.5vw] md:grid grid-rows-[4.4vw] grid-cols-[max-content_1fr] z-[10000] transition-colors border-t-[0px]" +
			" max-sm:flex flex-col max-sm:align-center max-sm:h-max max-sm:pt-2 max-sm:pb-0 max-sm:gap-y-0" +
			(!isMainPage ? " bg-red-900" : " glass")}
	>
		<div
			class={"relative pl-4 grid grid-cols-[max-content_max-content] grid-rows-[max-content_max-content] gap-x-4 font-anaktoria self-center z-10" +
				" max-sm:w-full max-[400px]:grid-rows-[repeat(3,max-content)] max-sm:pl-1 max-sm:gap-x-2 max-3xs:gap-x-1"}
		>
			<a
				href="/"
				class="logoImg sm:w-[4vw] row-span-full aspect-square place-self-center max-sm:w-[3.5rem] max-3xs:w-[2.5rem] max-sm:self-center"
			>
				<div class="w-full h-full bg-red-50"></div>
				<img class="hidden" src="/logo.png" alt="Λογότυπο Σχολής" />
			</a>
			<div
				class={"absolute top-[50%] translate-y-[calc(-50%_+_2px)] left-[calc(1rem_-_1px)] -z-10" +
					" max-sm:top-[2px] max-sm:translate-y-0 max-sm:left-[6px]"}
			>
				<div class="logoImg sm:w-[4vw] aspect-square max-sm:w-[3.5rem] max-3xs:w-[2.5rem]">
					<div class="w-full h-full bg-[rgb(0_0_0_/_0.25)]"></div>
				</div>
			</div>
			<p
				class="navTitle mt-1 font-bold drop-shadow-[-2px_1px_2px_rgba(0_0_0_/_0.75)] text-red-50 text-[1.75vw] max-sm:text-lg max-[380px]:text-base max-sm:text-center max-2xs:text-sm"
			>
				Σχολή Βυζαντινής & Παραδοσιακής Μουσικής
			</p>
			<p
				class="navTitle font-bold drop-shadow-[-2px_1px_2px_rgba(0_0_0_/_0.75)] text-red-50 text-[1.25vw] min-[1536px]:pl-20 min-[1152px]/nav:pl-12 pl-4 max-sm:text-xs max-2xs:text-2xs max-sm:text-center"
			>
				Ι.Ν. Μεταμορφώσεως του Σωτήρος, ομωνύμου Δήμου
			</p>
		</div>
		<div class="w-min grid auto-cols-auto grid-rows-[1fr] grid-flow-col justify-self-end px-4 max-sm:hidden">
			{
				links.map(link => (
					<a
						class="group relative grid grid-rows-[minmax(min-content, 60px)] place-content-center @[1536px]/nav:px-4  @6xl/nav:px-2 px-1"
						href={link.url}
						rel={!isDev ? "prefetch-intent" : ""}
					>
						<div class="px-2 font-bold font-anaktoria text-red-50 whitespace-nowrap drop-shadow-[-1px_1px_1px_rgba(0,0,0,0.15)] text-[1.5vw]">
							{link.name}
						</div>
						<div
							class={
								"absolute left-1 right-1 bottom-0 h-[4px] rounded-t-[4px]" +
								(highlight(link.url) ? " bg-red-100" : " group-hover:bg-red-100")
							}
						/>
					</a>
				))
			}
		</div>
		<div id="burgerNav" class="group/nav relative sm:hidden w-full flex flex-col justify-center py-1">
			<p
				class="relative self-center w-max text-center text-xl leading-6 font-bold font-anaktoria text-red-50 drop-shadow-[-1px_1px_1px_rgba(0,0,0,0.15)] transition-transform group-[:is(.open)]/nav:translate-x-[calc(50%_+_0.9375rem)]"
			>
				<i
					class="absolute text-sm top-[50%] translate-y-[-50%] left-0 translate-x-[calc(-100%_-_0.5rem)] fa-solid fa-bars text-red-50 drop-shadow-[-1px_1px_1px_rgba(0,0,0,0.75)]"
				></i>
				<span class="opacity-100 transition-opacity group-[:is(.open)]/nav:opacity-0 drop-shadow-[-1px_1px_1px_rgba(0,0,0,0.75)]"
					>Περιήγηση</span
				>
			</p>
			<div class="hidden absolute top-[2rem] h-max flex-col grid-cols-[100%] w-full">
				{
					links.map(link => (
						<a
							class="relative grid py-4 bg-red-900 opacity-0 transition-opacity ease-in-out group-[:is(.open)]/nav:opacity-100"
							href={link.url}
						>
							<p class="px-2 font-bold font-anaktoria text-red-50 whitespace-nowrap drop-shadow-[-1px_1px_1px_rgba(0,0,0,0.15)] text-center text-xl">
								{link.name}
							</p>
						</a>
					))
				}
			</div>
		</div>
	</nav>
	<style is:inline>
		.logoImg {
			mask-image: url("/logo.png");
			-webkit-mask-image: url("/logo.png");
			mask-size: contain;
			-webkit-mask-size: contain;
		}

		/* Subpixel gaps for no reason at all.... */
		#burgerNav a:nth-child(5) {
			transition-duration: 0.6s;
			transform: translateY(-5px);
		}
		#burgerNav a:nth-child(4) {
			transition-duration: 0.625s;
			transform: translateY(-4px);
		}
		#burgerNav a:nth-child(3) {
			transition-duration: 0.65s;
			transform: translateY(-3px);
		}
		#burgerNav a:nth-child(2) {
			transition-duration: 0.675s;
			transform: translateY(-2px);
		}
		#burgerNav a:nth-child(1) {
			transition-duration: 0.7s;
			transform: translateY(-1px);
		}
		#burgerNav:is(.open) a:nth-child(1) {
			transition-duration: 0.6s;
		}
		#burgerNav:is(.open) a:nth-child(2) {
			transition-duration: 0.625s;
		}
		#burgerNav:is(.open) a:nth-child(3) {
			transition-duration: 0.65s;
		}
		#burgerNav:is(.open) a:nth-child(4) {
			transition-duration: 0.675s;
		}
		#burgerNav:is(.open) a:nth-child(5) {
			transition-duration: 0.7s;
		}
	</style>
</>
<script>
		import { iOS, onElementMount } from "../../lib/utils.client";
		window.location.pathname === "/" &&
			onElementMount("#welcome-page", () => {
				const obsv = new IntersectionObserver(
					entries => {
						const nav = document.querySelector("nav") as HTMLElement;
						const entry = entries[0];
						const wHeight = window.innerHeight;
						const cHeight = entry.boundingClientRect.height;

						const ratio = cHeight > wHeight ? wHeight / cHeight : 1;
						if (entry.intersectionRatio >= ratio * 0.9) {
							nav.classList.replace("bg-red-900", "glass");
						} else {
							nav.classList.replace("glass", "bg-red-900");
							document.querySelector("#xairetismos-btn")?.remove();
						}
					},
					{
						root: null,
						rootMargin: "0px",
						threshold: new Array(10).fill(0).map((_, i) => i / 10)
					}
				);
				obsv.observe(document.querySelector("#welcome-page") as Element);
			});
		window.matchMedia("(max-width: 640px)").matches &&
			onElementMount("#burgerNav", () => {
				//@ts-ignore
				document.querySelector("#burgerNav").addEventListener("click", () => {
					const menu = document.querySelector("#burgerNav > div") as HTMLElement;
					const isOpen = menu.parentElement?.classList.contains("open");
					if (isOpen) {
						menu.parentElement?.classList.remove("open");
						setTimeout(() => {
							menu.classList.add("hidden", "flex");
						}, 700);
					} else {
						menu.classList.toggle("hidden");
						menu.classList.toggle("flex");
						void menu.offsetWidth;
						menu.parentElement?.classList.toggle("open");
					}
				});
			});
		if(iOS()) {
			onElementMount(".navTitle", () => {
				const heads = [...document.querySelectorAll(".navTitle")] as HTMLElement[];
				heads.forEach(head => {
					head.style.setProperty("letter-spacing", "-1px");
				});
			})
		}
	</script>
