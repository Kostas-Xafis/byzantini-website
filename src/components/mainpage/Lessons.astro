---
const lessons = ["Βυζαντινή Μουσική", "Παραδοσιακή Μουσική", "Ευρωπαϊκή Μουσική"];
const text = Array(3).fill(
	"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quod, tenetur et. Odit nostrum suscipit illum corrupti maxime,adipisci beatae reiciendis laborum blanditiis nisi explicabo dolore reprehenderit, repellat quidem omnis deserunt facere quaenam quo sapiente amet at rerum incidunt fugiat."
);
---

<div id="lessons" class="h-max w-full grid grid-rows-[max-content_1fr] grid-cols-3 gap-16 p-16 py-20">
	<h1
		id="lessonsHead"
		class="heading relative p-2 text-center w-[9ch] place-self-center text-7xl font-bold font-anaktoria text-red-900 col-span-full overflow-hidden after:left-[calc(50%_-_4ch)] after:w-[8ch] after:bg-red-900"
	>
		Μαθήματα
	</h1>
	{
		lessons.map((l, i) => (
			<div class="group/lesson relative h-[500px] rounded-lg shadow-lg border-2 border-red-900 shadow-gray-400 p-8 overflow-hidden after:blur-[3px] after:scale-105 after:bg-center after:absolute after:inset-0 after:-z-10 after:bg-cover">
				<h2 class="text-center text-5xl font-bold font-anaktoria text-red-50 transition-transform duration-300 translate-y-[calc(250px_-_50%_-_2rem)] group-hover/lesson:translate-y-0">
					{l}
				</h2>
				<p class="text-2xl font-didact text-red-50 place-self-center pt-8 transition-opacity duration-100 opacity-[0.0001] group-hover/lesson:opacity-100 group-hover/lesson:duration-500">
					{text[i]}
				</p>
			</div>
		))
	}
	<style is:inline>
		#lessons > div:nth-of-type(1)::after {
			background: linear-gradient(to right, rgb(24, 24, 24, 0.15), rgb(24, 24, 24, 0.15)), url("/byz2.jpg");
			background-size: cover;
			background-position: center;
		}
		#lessons > div:nth-of-type(2)::after {
			background: linear-gradient(to right, rgb(24, 24, 24, 0.15), rgb(24, 24, 24, 0.15)), url("/par.jpg");
			background-size: cover;
			background-position: center;
		}
		#lessons > div:nth-of-type(3)::after {
			background-image: url("/eur.jpg");
		}

		#lessons > div {
			background: linear-gradient(to right, transparent, rgb(28, 28, 28, 0.85) 85%);
			background-size: 300% 300%;
			transition: background-position 0.25s ease-in-out;
		}
		#lessons h1,
		#lessons h2 {
			text-shadow: -2px 1px 2px rgb(14, 14, 14, 0.5);
		}
		#lessons > div:hover {
			background-position: 100%;
		}
	</style>
</div>
<script>
	const onElementMount = async (target: string, callback: () => any) => {
		while (!document.querySelector(target)) {
			console.log("waiting for element to mount: " + target);
			await new Promise(resolve => setTimeout(resolve, 100));
		}
		callback();
	};
	onElementMount("#lessons", () => {
		const obsv = new IntersectionObserver(
			entries => {
				const entry = entries[0];
				// @ts-ignore
				if (entry.intersectionRatio >= 0.4) document.querySelector("#lessonsHead").classList.add("emphasis");
				// @ts-ignore
				else document.querySelector("#lessonsHead").classList.remove("emphasis");
			},
			{
				root: null,
				rootMargin: "0px",
				threshold: [0.4]
			}
		);
		// @ts-ignore
		obsv.observe(document.querySelector("#lessons") as HTMLElement);
	});
</script>
