---
const lessons = ["Βυζαντινή Μουσική", "Παραδοσιακή Μουσική", "Ευρωπαϊκή Μουσική"];
const text = [
	"Σπούδασε στη Σχολή μας την ιερά τέχνη του Ιωάννου του Δαμασκηνού και του Ρωμανού του Μελωδού. Απόκτησε Πτυχίο και Δίπλωμα Βυζαντινής Μουσικής αναγνωρισμένο από το κράτος και γίνε θεματοφύλακας της ελληνορθόδοξης μουσικής μας παραδόσεως.",
	`Από το 2022 με σχετικό ΦΕΚ  προστέθηκαν επισήμως στην Σχολή μας Τμήματα παραδοσιακής μουσικής. Πλέον, δίνεται σε όλους η ευκαιρία, ανεξαρτήτως ηλικίας, να εντρυφήσουν στα νάματα της εθνικής μας παραδοσιακής μουσικής, με τα οποία γαλουχήθηκαν γενεές γενεών.`,
	`Στη Σχολή μας λειτουργεί τμήμα Ευρωπαϊκής μουσικής. Απευθύνεται τόσο στους μαθητές βυζαντινής μουσικής, όσο και σε υποψήφιους μαθητές σε μουσικά σχολεία και υποψήφιους φοιτητές σε τμήματα Μουσικών Σπουδών ΑΕΙ.`
];
---

<div
	id="lessons"
	class="h-max w-full grid grid-rows-[max-content_1fr] max-sm:flex flex-col grid-cols-3 gap-[4vw] p-[4vw] py-[10vh] max-sm:grid-rows-[max-content_repeat(3,_1fr)] max-sm:grid-cols-[66%] max-sm:justify-center"
>
	<h1
		id="lessonsHead"
		class="heading relative p-2 text-center w-[9ch] flex-grow-2 place-self-center text-[3.5vw] max-sm:text-3xl leading-[3.5vw] font-bold font-anaktoria text-red-900 col-span-full overflow-hidden after:left-[calc(50%_-_4ch)] after:w-[8ch] after:bg-red-900 after:max-sm:rounded-sm after:max-sm:h-[0px]"
	>
		Μαθήματα
	</h1>
	{
		lessons.map((l, i) => (
			<div class="lessonCard group/lesson relative h-full rounded-lg shadow-lg border-2 border-red-900 shadow-gray-400 p-[2vw] overflow-hidden after:blur-[2px] after:scale-105 after:bg-center after:absolute after:inset-0 after:-z-10 after:bg-cover">
				<h2 class="absolute inset-0 text-center text-[2.5vw] max-sm:text-2xl font-bold font-anaktoria text-red-50 transition-transform duration-300 translate-y-[calc(50%_-_1.25vw)] max-sm:translate-y-[calc(50%_-_0.75rem)] group-[:is(.show)]/lesson:translate-y-4 group-hover/lesson:translate-y-4">
					{l}
				</h2>
				<p class="text-[1.5vw] whitespace-pre-line max-sm:text-base font-didact text-red-50 place-self-center pt-10 max-sm:px-2 max-sm:pb-4  transition-opacity duration-100 opacity-[0.0001] group-[:is(.show)]/lesson:opacity-100 group-hover/lesson:opacity-100 group-[:is(.show)]/lesson:duration-500 group-hover/lesson:duration-500">
					{text[i]}
				</p>
			</div>
		))
	}
	<style is:inline>
		.lessonCard:nth-of-type(1)::after {
			background: linear-gradient(to right, rgb(24, 24, 24, 0.15), rgb(24, 24, 24, 0.15)), url("/byz3.jpg");
			background-size: cover;
			background-position: center;
		}
		.lessonCard:nth-of-type(2)::after {
			background: linear-gradient(to right, rgb(24, 24, 24, 0.15), rgb(24, 24, 24, 0.15)), url("/par.jpg");
			background-size: cover;
			background-position: center;
		}
		.lessonCard:nth-of-type(3)::after {
			background-image: url("/eur.jpg");
		}

		.lessonCard {
			background: linear-gradient(to right, transparent, rgb(28, 28, 28, 0.85) 95%);
			background-size: 300% 300%;
			transition: background-position 0.25s ease-in-out;
		}
		#lessons h1,
		#lessons h2 {
			text-shadow: -1px 1px 2px rgb(14, 14, 14, 0.3);
		}
		.lessonCard:is(.show),
		.lessonCard:hover {
			background-position: 100%;
		}
	</style>
</div>
<script>
	import { onElementMount } from "../../../lib/utils.client";
	onElementMount("#lessons", () => {
		const obsv = new IntersectionObserver(
			entries => {
				const entry = entries[0];
				// @ts-ignore
				if (entry.intersectionRatio >= 0.4) document.querySelector("#lessonsHead").classList.add("emphasis");
				// @ts-ignore
				else document.querySelector("#lessonsHead").classList.remove("emphasis");
			},
			{
				root: null,
				rootMargin: "0px",
				threshold: [0.4]
			}
		);
		// @ts-ignore
		obsv.observe(document.querySelector("#lessons") as HTMLElement);
	});
	onElementMount("#lessons", () => {
		const lessonCards = document.querySelectorAll(".lessonCard");
		if (window.matchMedia("not all and (min-width: 640px)").matches) {
			const obsv = new IntersectionObserver(
				entries => {
					const entry = entries[0];
					if (entry.intersectionRatio >= 0.95) entry.target.classList.add("show");
					else if (entry.intersectionRatio <= 0.1) entry.target.classList.remove("show");
				},
				{
					root: null,
					rootMargin: "0px",
					threshold: [0.1, 0.95]
				}
			);
			lessonCards.forEach((card, i) => {
				obsv.observe(card);
			});
		}
	});
</script>
