---
import { useAPI } from "../../../lib/hooks/useAPI.astro";
import Layout from "../../layouts/Layout.astro";
import GMap from "../../components/other/GMap.astro";
let _locations = (await useAPI("Locations.getByPriority", {})).data || [];
const imgSrc = "/";
const schoolLocations = _locations.filter((l) => !l.partner);
const otherLocations = _locations.filter((l) => !!l.partner);
---

<Layout title="Σπουδαστήρια">
	<style is:inline>
		#btsContainer > div {
			-ms-overflow-style: none !important; /* Internet Explorer 10+ */
			scrollbar-width: none !important; /* Firefox */
		}
		#btsContainer > div::-webkit-scrollbar {
			display: none !important; /* Safari and Chrome */
		}
	</style>
	<div
		class="group/type w-full h-full grid !font-didact grid-cols-[max-content_1fr] max-sm:grid-rows-[max-content_1fr] max-sm:grid-cols-[100%]">
		<div
			id="btsContainer"
			class="max-sm:hidden relative border-r-2 overflow-auto border-red-900 z-10">
			<i
				class="up opacity-0 cursor-pointer absolute fa-solid fa-chevron-up drop-shadow-[0px_2px_1px_rgb(24,24,24,0.6)] text-red-900 text-[1.5vw] pt-1 text-center w-[100%] top-0 bg-red-200 bg-opacity-50 backdrop-blur-[2px] z-50"
			></i>
			<i
				class="down opacity-0 cursor-pointer absolute fa-solid fa-chevron-down drop-shadow-[0px_-2px_1px_rgb(24,24,24,0.6)] text-red-900 text-[1.5vw] text-center w-[100%] bottom-0 bg-red-200 bg-opacity-50 backdrop-blur-[2px] z-50"
			></i>
			<div class="w-max h-full grid auto-rows-max cursor-pointer overflow-auto">
				{
					schoolLocations.map((l, ind) => (
						<div
							data-show={ind === 0}
							data-name={l.name}
							class="btn group/btn relative w-full py-[1vw] flex justify-center bg-white transition-colors duration-500 ease-in-out hover:bg-red-900 border-b-2 border-red-900 data-[show]/btn:bg-red-900">
							<button class="p-[0.75vw] w-[20ch] text-[1.25vw] group-hover/btn:text-white group-data-[show]/btn:text-white transition-colors duration-500 ease-in-out drop-shadow-[-2px_1px_1px_rgba(15,15,15,0.15)]">
								{l.name}
							</button>
							<div class="absolute right-[0.625vw] top-[50%] translate-y-[-50%] font-bold text-[1.25vw]">
								<i class="fa-solid fa-chevron-right text-red-50 opacity-0 drop-shadow-[-2px_1px_1px_rgba(15,15,15,0.15)] group-data-[show]/btn:opacity-100" />
							</div>
						</div>
					))
				}
				<div
					class="w-full px-[1vw] py-[1vw] place-self-center text-[1.5vw] flex flex-col gap-y-[1.vw] bg-red-900">
					<p class="text-white">Συνεργαζόμενες Σχολές</p>
					<i
						class="fa-solid fa-chevron-down font-bold text-[1.25vw] text-red-50 self-center drop-shadow-[-2px_1px_1px_rgba(15,15,15,0.15)]"
					></i>
				</div>
				{
					otherLocations.map((l) => (
						<div
							data-name={l.name}
							class="btn group/btn relative w-full py-[1vw] flex justify-center bg-white transition-colors duration-500 ease-in-out hover:bg-red-900 border-b-2 border-red-900 data-[show]/btn:bg-red-900">
							<button class="p-[0.75vw] w-[20ch] text-[1.25vw] group-hover/btn:text-white group-data-[show]/btn:text-white transition-colors duration-500 ease-in-out drop-shadow-[-2px_1px_1px_rgba(15,15,15,0.15)]">
								{l.name}
							</button>
							<div class="absolute right-[0.625vw] top-[50%] translate-y-[-50%] font-bold text-[1.25vw]">
								<i class="fa-solid fa-chevron-right text-red-50 opacity-0 drop-shadow-[-2px_1px_1px_rgba(15,15,15,0.15)] group-data-[show]/btn:opacity-100" />
							</div>
						</div>
					))
				}
			</div>
		</div>
		<div
			id="btsMobileContainer"
			class="sm:hidden w-full relative flex flex-col border-b-2 overflow-auto border-red-900 z-10">
			<p class="relative w-full text-lg px-2 pt-4 text-center">
				Αναζήτηση Σπουδαστηρίου
				<select
					id="mobileLocationSelect"
					class="absolute inset-0 w-full h-full opacity-[0.005] focus:!outline-none">
					<optgroup label="Σπουδαστήρια Σχολής" class="bg-red-900 text-center text-white">
						{
							schoolLocations.map((l, ind) => (
								<option
									data-show={ind === 0}
									data-name={l.name}
									class="bg-white text-black">
									{l.name}
								</option>
							))
						}
					</optgroup>
					<optgroup
						label="Συνεργαζόμενες Σχολές"
						class="bg-red-900 text-center text-white">
						{
							otherLocations.map((l) => (
								<option
									data-name={l.name}
									value={l.name}
									class="bg-white text-black">
									{l.name}
								</option>
							))
						}
					</optgroup>
				</select>
			</p>
			<i
				class="fa-solid fa-chevron-down font-bold text-lg text-red-900 self-center drop-shadow-[-2px_1px_1px_rgba(15,15,15,0.15)]"
			></i>
		</div>
		<div
			id="locationsContainer"
			class="relative w-full h-full grid-rows-[90%] grid-cols-[95%] sm:grid max-sm:flex sm:place-content-center sm:justify-center max-sm:h-max max-sm:pb-8">
			{
				_locations.map((l, i) => {
					return (
						<div
							data-name={l.name}
							class="hidden w-full max-sm:w-[100dvw] max-sm:flex-col justify-self-center sm:rounded-2xl shadow-md shadow-gray-400 border-solid sm:border-2 border-red-900 sm:overflow-hidden max-sm:overflow-auto"
							class:list={[i === 0 ? " show" : "", !l.image ? " w-max" : ""]}>
							{l.image && (
								<div class="flex max-h-[100vh] max-sm:max-h-[300px]">
									<img
										src={imgSrc + l.image}
										alt={"Φωτογραφία Παραρτήματος " + l.name}
										class="w-[clamp(0px,37.5vw,700px)] max-sm:w-[100dvw] max-sm:h-[clamp(0px,100%,300px)] object-cover"
									/>
								</div>
							)}
							<div class="w-max max-sm:w-full grid grid-rows-[repeat(5,max-content)_1fr] gap-y-[1.25vw] max-sm:gap-y-4 px-[2vw] py-[1vw] bg-white max-sm:px-4 max-sm:py-4">
								<h1
									id="locationsHead"
									class="text-[2vw] max-sm:text-xl text-center underline underline-offset-4 decoration-1 drop-shadow-[-1px_1px_1px_rgba(0,0,0,0.15)]">
									{l.name}
								</h1>
								<p class="text-[1.25vw] max-sm:text-lg">
									<i class="fa-solid fa-map-location-dot pr-2" />
									<span class="underline decoration-1 decoration-slate-800 underline-offset-[3px] pr-1">
										Διεύθυνση:
									</span>
									{l.address + ", " + l.areacode + " - " + l.municipality}
								</p>
								<p class="text-[1.25vw] max-sm:text-lg">
									<i class="fa-solid fa-user pr-3" />
									<span class="underline decoration-1 decoration-slate-800 underline-offset-[3px] pr-1">
										Υπεύθυνος:
									</span>
									{l.manager}
								</p>
								<p class="text-[1.25vw] max-sm:text-lg">
									<i class="fa-regular fa-envelope pr-2" />
									<span class="underline decoration-1 decoration-slate-800 underline-offset-[3px] pr-1">
										Επικοινωνία:&NegativeThinSpace;
									</span>
									<a target="_blank" href={`mailto:${l.email}`}>
										{l.email ?? ""}&NegativeThinSpace;
									</a>
									<span class="text-[1.25vw] max-sm:text-lg px-1">•</span>
									{l.telephones.split(",").map((tel) => {
										return (
											<a target="_blank" href={`tel:${tel}`}>
												{tel}
											</a>
										);
									})}
								</p>
								<div class="flex flex-row gap-x-4">
									{l.link && (
										<a
											target="_blank"
											href={l.link}
											class="w-max rounded-lg text-[1.25vw] max-sm:text-lg border-red-900 border-solid border-2 max-sm:border-[1px] p-[0.4vw] max-sm:p-1 max-sm:px-2 transition-colors hover:bg-red-900 hover:text-white">
											<i class="fa-solid fa-link pr-2" /> Σύνδεσμος
										</a>
									)}
									{l.youtube && (
										<a
											target="_blank"
											href={l.youtube}
											class="w-max rounded-lg text-[1.25vw] max-sm:text-lg border-red-900 border-solid border-2 max-sm:border-[1px] p-[0.4vw] max-sm:p-1 max-sm:px-2 transition-colors hover:bg-red-900 hover:text-white">
											<i class="fa-brands fa-youtube pr-2" /> YouTube
										</a>
									)}
								</div>
								<GMap link={l.map} />
							</div>
						</div>
					);
				})
			}
		</div>
	</div>
	<style is:inline>
		button:is(.selected) {
			background-color: rgb(153, 27, 27);
		}
		.remove {
			opacity: 1;
			animation: fadeOut 0.3s ease-in-out forwards;
		}
		.show {
			display: flex !important;
		}
		#locationsContainer > div:is(:not(.remove)),
		#btsContainer {
			opacity: 0.0001;
			animation: fadeIn 0.6s ease-in-out forwards;
		}
		#btsContainer > div > .btn:hover i {
			animation: fadeInLeft 0.3s ease-in-out forwards;
		}
		#btsContainer:is(.shadow-up) .up {
			opacity: 1;
		}
		#btsContainer:is(.shadow-down) .down {
			opacity: 1;
		}
	</style>
</Layout>

<script>
	import { onElementMount } from "../../../lib/utils.client";

	window.matchMedia("(min-width: 641px)").matches &&
		onElementMount("#locationsContainer", async function () {
			document.querySelectorAll("#btsContainer div[data-name]").forEach((btn) =>
				btn.addEventListener("click", () => {
					const name = btn.getAttribute("data-name") as string;
					const shown = document.querySelector("[data-show]") as HTMLElement | null;
					if (shown === btn) return;

					const container = document.querySelector("#locationsContainer") as HTMLElement;
					const heading = document.querySelector("#locationsHead") as HTMLElement;
					if (shown) {
						const location = container.querySelector(".show") as HTMLElement;
						location.classList.add("remove");

						setTimeout(() => {
							location.classList.remove("show", "remove");
							shown.removeAttribute("data-show");
							void shown.offsetWidth;

							container
								.querySelector(`div[data-name='${name}']`)
								?.classList.add("show");

							heading.innerText = name;
							btn.setAttribute("data-show", "");
						}, 300);
					} else {
						heading.innerText = name;
						btn.setAttribute("data-show", "");
					}
				}),
			);
			if (window.location.hash) {
				const hash = window.location.hash.replace("#", "");
				const location = decodeURI(hash);
				const btn = document.querySelector(
					`#btsContainer div[data-name='${location}'] button`,
				) as HTMLElement;
				btn.click();
			}
		});
	window.matchMedia("(max-width: 640px)").matches &&
		onElementMount("#locationsContainer", async function () {
			const select = document.querySelector(
				"#btsMobileContainer select",
			) as HTMLSelectElement;
			select.addEventListener("change", (e) => {
				const locationName = select?.value as string;
				const container = document.querySelector("#locationsContainer") as HTMLElement;
				const heading = document.querySelector("#locationsHead") as HTMLElement;
				const prevLocation = container.querySelector(".show") as HTMLElement;
				prevLocation.classList.add("remove");
				let locationClassList = [] as any;
				prevLocation.classList.forEach((v) => locationClassList.push(v));
				let selectedClassList = [] as any;
				container
					.querySelector(`div[data-name='${locationName}']`)
					?.classList.forEach((v) => selectedClassList.push(v));
				setTimeout(() => {
					prevLocation.classList.remove("show", "remove");
					void prevLocation.offsetWidth;
					container
						.querySelector(`div[data-name='${locationName}']`)
						?.classList.add("show");
					heading.innerText = locationName;

					locationClassList = [] as any;
					prevLocation.classList.forEach((v) => locationClassList.push(v));
					selectedClassList = [] as any;
					container
						.querySelector(`div[data-name='${locationName}']`)
						?.classList.forEach((v) => selectedClassList.push(v));
				}, 300);
			});
		});
	onElementMount("#btsContainer", () => {
		// Create an instersection observer that when the are more elements to be scrolled a shadow is added to the bottom of the container. Same case for the top.
		const observer = new IntersectionObserver(
			(entries) => {
				entries.forEach((entry) => {
					const container = document.querySelector("#btsContainer") as HTMLElement;
					if (entry.target === container.querySelector("div:first-child")) {
						if (entry.intersectionRatio <= 0.4) {
							container.classList.add("shadow-up");
						} else {
							container.classList.remove("shadow-up");
						}
					} else {
						if (entry.intersectionRatio <= 0.4) {
							container.classList.add("shadow-down");
						} else {
							container.classList.remove("shadow-down");
						}
					}
				});
			},
			{
				root: document.querySelector("#btsContainer") as HTMLElement,
				rootMargin: "0px",
				threshold: [0.1, 0.4, 0.5, 0.6, 0.9],
			},
		);
		observer.observe(
			document.querySelector("#btsContainer > div > div:first-child") as HTMLElement,
		);
		observer.observe(
			document.querySelector("#btsContainer > div > div:last-child") as HTMLElement,
		);
	});
	onElementMount("#btsContainer", () => {
		const container = document.querySelector("#btsContainer > div") as HTMLElement;
		const btnUp = document.querySelector(".up") as HTMLElement;
		btnUp.addEventListener("click", () => {
			container.scrollBy({
				top: -container.offsetHeight / 4,
				behavior: "smooth",
			});
		});
		const btnDown = document.querySelector(".down") as HTMLElement;
		btnDown.addEventListener("click", () => {
			container.scrollBy({
				top: container.offsetHeight / 4,
				behavior: "smooth",
			});
		});
	});
</script>
