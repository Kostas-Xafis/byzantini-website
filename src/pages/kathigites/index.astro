---
import { useAPI } from "../../../lib/hooks/useAPI.astro";
import type { TeacherClasses, Teachers, ClassType } from "../../../types/entities";
import Navbar from "../../components/Navbar.astro";
import Layout from "../../layouts/Layout.astro";


const teachers = (await useAPI("Teachers.getByPriority", {})).data as Teachers[];
const teacher_classes = (await useAPI("Teachers.getClasses", {})).data as TeacherClasses[];
const enum MusicType {
	Byzantine = "byz",
	Traditional = "par",
	European = "eur",
	None = ""
}

const music = [
	["Βυζαντινή Μουσική", MusicType.Byzantine],
	["Παραδοσιακή Μουσική", MusicType.Traditional],
	["Ευρωπαϊκή Μουσική", MusicType.European]
] as const;
---

<Layout title="Καθηγητές">
	<Navbar />
	<div class="group/type w-full h-full grid grid-cols-[max-content_1fr] font-didact">
		<div id="btsContainer" class="w-max h-full grid grid-rows-[repeat(3,max-content)] border-r-2 border-red-900">
			{
				music.map(([str, type], ind) => (
					<div id={type + "btn"} data-show={ind === 0} data-type={type} class="group/btn w-full h-max py-6 place-self-center grid grid-cols-[1fr_max-content] bg-white transition-colors duration-500 ease-in-out hover:bg-red-900 border-b-2 border-red-900">
						<button
							class="p-6 text-2xl group-hover/btn:text-white transition-colors duration-500 ease-in-out drop-shadow-[-2px_1px_1px_rgba(15,15,15,0.15)]"
							data-type={type}
						>
							{str}
						</button>
						<i class="fa-solid fa-angle-right mt-2 pr-6 text-xl place-self-center group-hover/btn:text-white transition-colors duration-500 ease-in-out" />
					</div>
				))
			}
		</div>
		<div id="teachersContainer" class="w-full grid auto-rows-[max-content] grid-flow-row pt-10 gap-y-6 overflow-auto">
			<h1 id="teachersHead" class="text-4xl justify-self-center drop-shadow-[-2px_1px_1px_rgba(15,15,15,0.15)]">Καθηγητές Βυζαντινής Μουσικής</h1>
			{
				teachers.map(teacher => {
					const t_classes_type = teacher_classes.filter(c => c.teacher_id === teacher.id).map(c => music[c.class_id - 1][1]);
					const t_classes_str = teacher_classes.filter(c => c.teacher_id === teacher.id).map(c => music[c.class_id - 1][0]);
					return (
					<div class={"hidden grid-cols-[max-content_1fr] pl-6 gap-x-6 "
						+ (t_classes_type.includes(MusicType.Byzantine) ? "group-[:has(#byzbtn[data-show])]/type:grid " : "") 
						+ (t_classes_type.includes(MusicType.Traditional) ? "group-[:has(#parbtn[data-show])]/type:grid " : "") 
						+ (t_classes_type.includes(MusicType.European) ? "group-[:has(#eurbtn[data-show])]/type:grid " : "")}>
						{teacher.picture ? (
							<img src={"/kathigites/images/" + teacher.picture} width="200" height="250" alt={"Φωτογραφία Καθηγητή " + teacher.fullname} class="w-[200px] h-[250px] object-cover rounded-2xl shadow-md shadow-gray-500" />
						) : (
							<div class="w-[200px] h-[250px]"/>
						)}
						<div class="w-max grid auto-rows-max gap-y-2">
							<p class="text-3xl underline underline-offset-4 decoration-1 drop-shadow-sm">{teacher.fullname}</p>
							<p class="text-xl"> 
								Επικοινωνία: <i class="fa-regular fa-envelope pl-2 place-self-center" />
								{teacher.email}
								<span class="pl-1 text-lg font-serif">•</span>
								<i class="fa-solid fa-mobile-screen pl-2"/>
								{teacher.cellphone}
							</p>
							<p class="text-xl">{t_classes_str.join(' • ')}</p>
							<p class="text-xl">{teacher.instruments.replaceAll(",", " • ")}</p>
							{teacher.cv ? 
								<a target="_blank" href={"/kathigites/cv/" + teacher.cv} class="w-max rounded-lg text-xl border-red-900 border-solid border-2 p-2 transition-colors hover:bg-red-900 hover:text-white">
									<i class="fa-solid fa-file-lines pr-2"></i> Βιογραφικό
								</a>
								: <></>}
						</div>
					</div>
				)})
			}
		</div>
	</div>
</Layout>
<style>
	button:is(.selected) {
		background-color: rgb(153, 27, 27);
	}
	    @keyframes fadeIn {
		0%{
			opacity: 0.0001;
		}
		10%{
			opacity: 0.0001;
		}
        100%{
            opacity: 1;
        }
    }
	@keyframes fadeOut {
		0%{
			opacity: 1;
		}
		99%{
			opacity: 0.0001;
		}
        100%{
			opacity: 0.0001;
        }
    }
	.remove {
		opacity: 1;
		animation: fadeOut 0.4s ease-in-out forwards;
	}
	#teachersContainer:is(:not(.remove)), #btsContainer  {
		opacity: 0.0001;
		animation: fadeIn 0.6s ease-in-out forwards;
	}
	
</style>
<script>
	enum MusicType {
		byz = "Βυζαντινής Μουσικής",
		par = "Παραδοσιακής Μουσικής",
		eur = "Ευρωπαϊκής Μουσικής"
	}
	document.querySelectorAll("div:has(> button[data-type])").forEach(btn => {
		const type = btn.getAttribute("data-type") as "byz" | "par" | "eur";
		btn.addEventListener("click", () => {
			const shown = document.querySelector("[data-show]") as HTMLElement | null;
			if (shown === btn) return;
			const container = document.querySelector("#teachersContainer") as HTMLElement;
			const heading = document.querySelector("#teachersHead") as HTMLElement;
			if (shown) {
				container.classList.add("remove");
				void container.offsetWidth;
				setTimeout(() => {
					shown.removeAttribute("data-show");
					container.classList.remove("remove");
					heading.innerText = "Καθηγητές " + MusicType[type];
					btn.setAttribute("data-show", "");
				}, 300);
			} else {
				heading.innerText = "Καθηγητές " + MusicType[type];
				btn.setAttribute("data-show", "");
			}
		})
	})
</script>